# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  sonarqube: clicklogiq/sonarqube@0.0.2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    install-engine:
      description: "Install Sonarqube scanner"
      parameters:
        engine_version:
          type: string
          default: "4.2.0.1873"
      steps:
        - run:
            name: "Install Sonarqube scanner"
            command: |
              wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-<< parameters.engine_version >>.zip
              unzip sonar-scanner-cli-<< parameters.engine_version >>.zip

      code-analysis:
        description: "Run Sonarqube scanner for code analysis"
        parameters:
          organization:
            type: string
          host_url:
            type: string
          login:
            type: string
          projectKey:
            type: string
          projectBaseDir:
            type: string
            default: "/root/circleci-build"
          sources:
            type: string
            default: "."
          github_oauth:
            type: string
          github_repository:
            type: string
          runner_opts:
            type: string
            default: "-Xms1024m -Xmx4096m"
          exclusions:
            type: string
            default: "**/*.yaml,**/*.yml"
          engine_version:
            type: string
            default: "4.2.0.1873"
        steps:
          - run:
              name: "Code analysis"
              command: |
                export SONAR_RUNNER_OPTS="<< parameters.runner_opts >>"
                eval ./sonar-scanner-<< parameters.engine_version >>/bin/sonar-scanner \
                  -Dsonar.organization=<< parameters.organization >> \
                  -Dsonar.host.url=<< parameters.host_url >> \
                  -Dsonar.login=<< parameters.login >> \
                  -Dsonar.projectKey=<< parameters.projectKey >> \
                  -Dsonar.organization=<< parameters.organization >> \
                  -Dsonar.projectBaseDir=<< parameters.projectBaseDir >> \
                  -Dsonar.sources=<< parameters.sources >> \
                  -Dsonar.github.oauth=<< parameters.github_oauth >> \
                  -Dsonar.github.repository=<< parameters.github_repository >> \
                  -Dsonar.exclusions="<< parameters.exclusions >>"

      commit-analysis:
        description: "Run Sonarqube scanner for commit analysis"
        parameters:
          organization:
            type: string
          host_url:
            type: string
          login:
            type: string
          projectKey:
            type: string
          projectVersion:
            type: string
          projectBaseDir:
            type: string
            default: "/root/circleci-build"
          sources:
            type: string
            default: "."
          github_oauth:
            type: string
          github_pullRequest:
            type: string
          github_repository:
            type: string
          github_disableInlineComments:
            type: boolean
            default: false
          analysis_mode:
            type: string
            default: "preview"
          issuesReport_console_enable:
            type: boolean
            default: true
          runner_opts:
            type: string
            default: "-Xms1024m -Xmx4096m"
          exclusions:
            type: string
            default: "**/*.yaml,**/*.yml"
          engine_version:
            type: string
            default: "4.2.0.1873"
        steps:
          - run:
              name: "Commit analysis"
              command: |
                echo "<< parameters.github_pullRequest >>"
                if [ ! -z "<< parameters.github_pullRequest >>" ]; then
                  export SONAR_RUNNER_OPTS="<< parameters.runner_opts >>"
                  eval ./sonar-scanner-<< parameters.engine_version >>/bin/sonar-scanner \
                    -Dsonar.organization=<< parameters.organization >> \
                    -Dsonar.host.url=<< parameters.host_url >> \
                    -Dsonar.login=<< parameters.login >> \
                    -Dsonar.projectKey=<< parameters.projectKey >> \
                    -Dsonar.projectVersion=<< parameters.projectVersion >> \
                    -Dsonar.issuesReport.console.enable=<< parameters.issuesReport_console_enable >> \
                    -Dsonar.organization=<< parameters.organization >> \
                    -Dsonar.projectBaseDir=<< parameters.projectBaseDir >> \
                    -Dsonar.sources=<< parameters.sources >> \
                    -Dsonar.analysis.mode=<< parameters.analysis_mode >> \
                    -Dsonar.github.pullRequest=<< parameters.github_pullRequest >> \
                    -Dsonar.github.disableInlineComments=<< parameters.github_disableInlineComments >> \
                    -Dsonar.github.oauth=<< parameters.github_oauth >> \
                    -Dsonar.github.repository==<< parameters.github_repository >> \
                    -Dsonar.exclusions="=<< parameters.exclusions >>"
                else
                  echo "Check skipped..."
                fi

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test